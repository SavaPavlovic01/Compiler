// generated with ast extension for cup
// version 0.8
// 7/1/2024 1:50:3


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(DesignatorLoop DesignatorLoop);
    public void visit(ConstDeclLoopChar ConstDeclLoopChar);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(MethodDecl MethodDecl);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(PrintLoop PrintLoop);
    public void visit(CondTermLoop CondTermLoop);
    public void visit(Relop Relop);
    public void visit(ConstDeclLoopNum ConstDeclLoopNum);
    public void visit(Expr Expr);
    public void visit(VarDeclNext VarDeclNext);
    public void visit(ForFirst ForFirst);
    public void visit(VarDecl VarDecl);
    public void visit(ForFirstLoop ForFirstLoop);
    public void visit(AddopLoop AddopLoop);
    public void visit(VarDeclLoop VarDeclLoop);
    public void visit(Program Program);
    public void visit(ActParsLoop ActParsLoop);
    public void visit(ConstDeclNext ConstDeclNext);
    public void visit(MulopLoop MulopLoop);
    public void visit(DeclLists DeclLists);
    public void visit(ConstDeclLoopBool ConstDeclLoopBool);
    public void visit(Condition Condition);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(NamespaceList NamespaceList);
    public void visit(ConstDeclLoop ConstDeclLoop);
    public void visit(StaticInitList StaticInitList);
    public void visit(ConditionLoop ConditionLoop);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(ConstDecl ConstDecl);
    public void visit(ClassDeclPreamble ClassDeclPreamble);
    public void visit(Type Type);
    public void visit(ClassDeclList ClassDeclList);
    public void visit(Namespace Namespace);
    public void visit(CondTerm CondTerm);
    public void visit(Test Test);
    public void visit(StaticVarDeclList StaticVarDeclList);
    public void visit(ClassDecl ClassDecl);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(Designator Designator);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(Term Term);
    public void visit(DesStatementLoop DesStatementLoop);
    public void visit(FormParsLoop FormParsLoop);
    public void visit(Help Help);
    public void visit(DesStatementLoopFour DesStatementLoopFour);
    public void visit(DesStatementLoopThree DesStatementLoopThree);
    public void visit(DesStatementLoopTwo DesStatementLoopTwo);
    public void visit(DesStatementLoopOne DesStatementLoopOne);
    public void visit(DesignatorStatementSix DesignatorStatementSix);
    public void visit(DesignatorStatementFive DesignatorStatementFive);
    public void visit(DesignatorStatementFour DesignatorStatementFour);
    public void visit(DesignatorStatementThree DesignatorStatementThree);
    public void visit(DesignatorStatementTwo DesignatorStatementTwo);
    public void visit(DesignatorStatementOne DesignatorStatementOne);
    public void visit(PrintLoopTwo PrintLoopTwo);
    public void visit(PrintLoopOne PrintLoopOne);
    public void visit(CondFactTwo CondFactTwo);
    public void visit(CondFactOne CondFactOne);
    public void visit(CondTermLoopTwo CondTermLoopTwo);
    public void visit(CondTermLoopOne CondTermLoopOne);
    public void visit(CondTermTwo CondTermTwo);
    public void visit(CondTermOne CondTermOne);
    public void visit(ConditionLoopEnd ConditionLoopEnd);
    public void visit(ConditionLoopOne ConditionLoopOne);
    public void visit(ConditionTwo ConditionTwo);
    public void visit(ConditionOne ConditionOne);
    public void visit(ForThird ForThird);
    public void visit(ForSecond ForSecond);
    public void visit(ForFirstLoopEnd ForFirstLoopEnd);
    public void visit(ForFirstLoopOne ForFirstLoopOne);
    public void visit(ForFirstSecond ForFirstSecond);
    public void visit(ForFirstOne ForFirstOne);
    public void visit(HelpIf HelpIf);
    public void visit(IfIdent IfIdent);
    public void visit(DummyElse DummyElse);
    public void visit(SecondSemi SecondSemi);
    public void visit(FirstSemi FirstSemi);
    public void visit(For For);
    public void visit(StatementEighteen StatementEighteen);
    public void visit(StatementSeventeen StatementSeventeen);
    public void visit(StatementSixteen StatementSixteen);
    public void visit(StatementFifteen StatementFifteen);
    public void visit(StatementFourteen StatementFourteen);
    public void visit(StatementThirteen StatementThirteen);
    public void visit(StatementTwelve StatementTwelve);
    public void visit(StatementEleven StatementEleven);
    public void visit(StatementTen StatementTen);
    public void visit(StatementNine StatementNine);
    public void visit(StatementEight StatementEight);
    public void visit(StatementSeven StatementSeven);
    public void visit(StatementSix StatementSix);
    public void visit(StatementFive StatementFive);
    public void visit(StatementFour StatementFour);
    public void visit(StatementThree StatementThree);
    public void visit(StatementTwo StatementTwo);
    public void visit(StatementOne StatementOne);
    public void visit(ActParsLoopEpsilon ActParsLoopEpsilon);
    public void visit(ActParsLoopOne ActParsLoopOne);
    public void visit(ActPars ActPars);
    public void visit(MyDummy MyDummy);
    public void visit(TestTwo TestTwo);
    public void visit(TestOne TestOne);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(FactorTest FactorTest);
    public void visit(FactorNewConstructor FactorNewConstructor);
    public void visit(FactorNewConstructorArgs FactorNewConstructorArgs);
    public void visit(FactorNewArr FactorNewArr);
    public void visit(FactorParen FactorParen);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNum FactorNum);
    public void visit(MulopLoopEnd MulopLoopEnd);
    public void visit(MulopLoopOne MulopLoopOne);
    public void visit(TermTwo TermTwo);
    public void visit(TermOne TermOne);
    public void visit(AddopLoopEnd AddopLoopEnd);
    public void visit(AddopLoopOne AddopLoopOne);
    public void visit(Min Min);
    public void visit(ExprFour ExprFour);
    public void visit(ExprOne ExprOne);
    public void visit(DesignatorLoopFour DesignatorLoopFour);
    public void visit(DesignatorLoopThree DesignatorLoopThree);
    public void visit(DesignatorLoopTwo DesignatorLoopTwo);
    public void visit(DesignatorLoopOne DesignatorLoopOne);
    public void visit(DesignatorFour DesignatorFour);
    public void visit(DesignatorThree DesignatorThree);
    public void visit(DesignatorTwo DesignatorTwo);
    public void visit(DesignatorOne DesignatorOne);
    public void visit(MulopPercent MulopPercent);
    public void visit(MulopSlash MulopSlash);
    public void visit(MulopStar MulopStar);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLeq RelopLeq);
    public void visit(RelopBeq RelopBeq);
    public void visit(RelopSmaller RelopSmaller);
    public void visit(RelopBigger RelopBigger);
    public void visit(RelopNotEq RelopNotEq);
    public void visit(RelopComp RelopComp);
    public void visit(Assignop Assignop);
    public void visit(StatementListEnd StatementListEnd);
    public void visit(StatementListLoop StatementListLoop);
    public void visit(TypeNamespace TypeNamespace);
    public void visit(TypeVar TypeVar);
    public void visit(FormParsLoopNo FormParsLoopNo);
    public void visit(FormParsLoopVar FormParsLoopVar);
    public void visit(FormParsLoopArr FormParsLoopArr);
    public void visit(FormParName FormParName);
    public void visit(FormParsNo FormParsNo);
    public void visit(FormParsVar FormParsVar);
    public void visit(FormParsArr FormParsArr);
    public void visit(MethodName MethodName);
    public void visit(MethodDeclFour MethodDeclFour);
    public void visit(MethodDeclThree MethodDeclThree);
    public void visit(MethodDeclTwo MethodDeclTwo);
    public void visit(MethodDeclOne MethodDeclOne);
    public void visit(MethodDeclListEnd MethodDeclListEnd);
    public void visit(MethodDeclListLoop MethodDeclListLoop);
    public void visit(StaticInit StaticInit);
    public void visit(StaticInitListEnd StaticInitListEnd);
    public void visit(StaticInitListLoop StaticInitListLoop);
    public void visit(StaticVarDeclListEnd StaticVarDeclListEnd);
    public void visit(StaticVarDeclListLoop StaticVarDeclListLoop);
    public void visit(ClassDeclPreambleSeven ClassDeclPreambleSeven);
    public void visit(ClassDeclPreambleSix ClassDeclPreambleSix);
    public void visit(ClassDeclPreambleFive ClassDeclPreambleFive);
    public void visit(ClassDeclPreambleFour ClassDeclPreambleFour);
    public void visit(ClassDeclPreambleThree ClassDeclPreambleThree);
    public void visit(ClassDeclPreambleTwo ClassDeclPreambleTwo);
    public void visit(ClassDeclPreambleOne ClassDeclPreambleOne);
    public void visit(ClassDeclEight ClassDeclEight);
    public void visit(ClassDeclSeven ClassDeclSeven);
    public void visit(ClassDeclSix ClassDeclSix);
    public void visit(ClassDeclFive ClassDeclFive);
    public void visit(ClassDeclFour ClassDeclFour);
    public void visit(ClassDeclThree ClassDeclThree);
    public void visit(ClassDeclTwo ClassDeclTwo);
    public void visit(ClassDeclOne ClassDeclOne);
    public void visit(ClassDeclListEnd ClassDeclListEnd);
    public void visit(ClassDeclListLoop ClassDeclListLoop);
    public void visit(VarDeclNextTwo VarDeclNextTwo);
    public void visit(VarDeclNextOne VarDeclNextOne);
    public void visit(VarDeclLoopEnd VarDeclLoopEnd);
    public void visit(VarDeclLoopOne VarDeclLoopOne);
    public void visit(VarName VarName);
    public void visit(VarDeclTwo VarDeclTwo);
    public void visit(VarDeclOne VarDeclOne);
    public void visit(VarDeclListEnd VarDeclListEnd);
    public void visit(VarDeclListLoop VarDeclListLoop);
    public void visit(ContDeclNextBool ContDeclNextBool);
    public void visit(ContDeclNextChar ContDeclNextChar);
    public void visit(ContDeclNextNum ContDeclNextNum);
    public void visit(ConstDeclLoopEnd ConstDeclLoopEnd);
    public void visit(ConstDeclLoopOne ConstDeclLoopOne);
    public void visit(ConstDeclNextBool ConstDeclNextBool);
    public void visit(ConstDeclNextChar ConstDeclNextChar);
    public void visit(ConstDeclNextNum ConstDeclNextNum);
    public void visit(ConstDeclLoopBoolEnd ConstDeclLoopBoolEnd);
    public void visit(ConstDeclLoopBoolOne ConstDeclLoopBoolOne);
    public void visit(ConstDeclLoopCharEnd ConstDeclLoopCharEnd);
    public void visit(ConstDeclLoopCharOne ConstDeclLoopCharOne);
    public void visit(ConstDeclLoopNumEnd ConstDeclLoopNumEnd);
    public void visit(ConstDeclLoopNumOne ConstDeclLoopNumOne);
    public void visit(ConstDeclBool ConstDeclBool);
    public void visit(ConstDeclChar ConstDeclChar);
    public void visit(ConstDeclNum ConstDeclNum);
    public void visit(ConstDeclListEnd ConstDeclListEnd);
    public void visit(ConstDeclListLoop ConstDeclListLoop);
    public void visit(NamespaceName NamespaceName);
    public void visit(NamespaceThree NamespaceThree);
    public void visit(NamespaceTwo NamespaceTwo);
    public void visit(NamespaceFour NamespaceFour);
    public void visit(NamespaceOne NamespaceOne);
    public void visit(NamespaceListEnd NamespaceListEnd);
    public void visit(NamespaceListLoop NamespaceListLoop);
    public void visit(DeclListsEndClass DeclListsEndClass);
    public void visit(DeclListsEndVar DeclListsEndVar);
    public void visit(DeclListsEndConst DeclListsEndConst);
    public void visit(DeclListsLoopClass DeclListsLoopClass);
    public void visit(DeclListsLoopVar DeclListsLoopVar);
    public void visit(DeclListsLoopConst DeclListsLoopConst);
    public void visit(ProgName ProgName);
    public void visit(ProgramEight ProgramEight);
    public void visit(ProgramSeven ProgramSeven);
    public void visit(ProgramSix ProgramSix);
    public void visit(ProgramFive ProgramFive);
    public void visit(ProgramFour ProgramFour);
    public void visit(ProgramThree ProgramThree);
    public void visit(ProgramTwo ProgramTwo);
    public void visit(ProgramOne ProgramOne);

}
